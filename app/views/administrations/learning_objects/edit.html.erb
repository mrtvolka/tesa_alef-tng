<nav class="question-nav not-zoomable">
  <%= render 'shared/user_element_admin' %>
  <div class="mobile-content wide">
    <h2><%= Setup.first.name %> - administrácia</h2>
    <a href="<%=url_for administrations_learning_objects_path(:course => @learning_object.course) %>"><i class="nav-right-icons icon-level-up"></i></a>
    <a class="user-element-cta"><i class="nav-right-icons icon-menu"></i></a>
  </div>
</nav>
<hr class="nav-offset not-zoomable">
<div class="container">
  <div class="tabs">
    <ul id="editor-tabs" class="tablist" role="tablist">
      <li class="active"><a href="#" data-target="#question-settings" role="tab" id="question-tab" data-toggle="tab">Nastavenia otázky</a></li>
      <li><a href="#" data-target="#answer-settings" role="tab" id="answer-tab" data-toggle="tab">Odpovede</a></li>
      <!--li><a href="#" data-target="#feedbacks" role="tab" id="feedback-tab" data-toggle="tab">Spätná väzba<span id="feedback-not-reviewed-count"></span></a></li>-->
      <li><a href="#" data-target="#question-preview" role="tab" id="question-preview-tab" data-toggle="tab">Náhľad</a></li>
      <li class="icon"><a class="" ><i class="icon-delete"></i></a></li>
    </ul>
    <div id="editor-tabs-content" class="tab-content is-first">
      <div role="tabpanel" class="tab-pane active" id="question-settings">
        <%= form_for @learning_object, as: :learning_object,
                     url: {
                             controller: 'administrations/learning_objects',
                             action: :update},
                     method: :patch do |f| %>
            <div class="admin">
              <div class="form-group">
                <dl class="dl-horizontal">
                  <dt><%= f.label :lo_id, t('activerecord.attributes.learning_object.lo_id') %></dt>
                  <dd><%= f.text_field :lo_id, class: "question_text_field" %></dd>

                  <dt><%= f.label :question_text, t('activerecord.attributes.learning_object.question_text') %></dt>
                  <dd><%= f.text_area :question_text, class: "question_text_field" %></dd>

                  <dt><%= f.label :type, t('activerecord.attributes.learning_object.type') %></dt>
                  <dd><%= t("admin.questions.labels.types.#{@learning_object.type.downcase}") %></dd>

                  <dt><%= f.label :difficulty, t('activerecord.attributes.learning_object.difficulty') %></dt>
                  <dd><%= f.select(:difficulty, options_for_select(LearningObject::DIFFICULTY.map { |id, difficulty|
                                                                     [t("admin.questions.labels.difficulties.#{difficulty}"), difficulty]
                                                                   }, @learning_object.difficulty), class: 'form-control') %></dd>

                  <dt><%= f.label :external_reference, t('admin.questions.labels.external_reference') %></dt>
                  <dd><%= @learning_object.external_reference || '-' %></dd>

                  <dt><%= label_tag t('admin.questions.labels.successfulness') %></dt>
                  <% successfulness = @learning_object.successfulness %>
                  <dd><%= "#{successfulness[:rate]} % (#{successfulness[:solved]} úspešných z #{successfulness[:total]})" %></dd>

                  <dt></dt>
                  <dd>
                    <%= submit_tag t('global.links.save_changes'), class: :btn, data: { disable_with: t('global.texts.saving') } %>
                    <%= button_tag t('global.links.discard_changes'), class: :btn, type: :reset %>
                  </dd>
                </dl>
              </div>
            </div>
        <% end %>
      </div>
      <div role="tabpanel" class="tab-pane" id="answer-settings">
        <%= render 'answers' %>
      </div>
      <!--<div role="tabpanel" class="tab-pane" id="feedbacks">
        <!--%= render 'feedbacks' %>
      </div>-->
      <div role="tabpanel" class="tab-pane" id="question-preview">
        <%= render 'questions/question_core', hide_question_options: true, learning_object: @learning_object %>
      </div>

    </div>
  </div>
</div>

<script type="text/javascript">
    $(function(){
        Slider.setupEvaluatorSlider();
        // Zapnutie markdownu.
        new MarkdownPreview($('#edit_question_text'), {
            className: 'admin-markdown-textarea admin-markdown-edit-textarea',
            outerClassName: 'admin-markdown-preview'
        });
        $('.question-answer-area').each(function() {
            new MarkdownPreview($(this), { autofix: true, className: 'admin-markdown-textarea', outerClassName: 'admin-markdown-preview' });
        });
        var tabs = $('#editor-tabs').find('li:not(.icon)').find('a');
        tabs.click(function (e) {
            set_tab(tabs, $(this));
            e.preventDefault();
            e.stopImmediatePropagation();
        });
        if (location.hash.length > 0) {
            set_tab(tabs, tabs.filter('[data-target="'+location.hash+'"]'));
        }
        Admin.currentLoId = <%= @learning_object.id %>;
        Admin.fetchFeedback();
        turbolinksSetInterval(function(){
            Admin.fetchFeedback();
        }, 30000);
        <%# Overovanie korektnosti odpovedi. %>
        <% if @learning_object.type == "SingleChoiceQuestion" %>$('input[data-type="correctness"]').change(function(){ Admin.verifySingleChoice($(this)); });<% end %>
        <% if @learning_object.type == "EvaluatorQuestion" %>$('input[data-type="visibility"]').change(function(){ Admin.verifyEvaluator($(this)); });<% end %>
    });
    function set_tab(tabs, tab) {
        var firstTab = tabs.first();
        if (history.pushState) {
            history.pushState(null, null, $(tab).attr('data-target'));
        }
        else {
            location.hash = $(tab).attr('data-target');
        }
        $(tab).tab('show');
        if ($(tab).attr('id') == firstTab.attr('id')) {
            $('#editor-tabs-content').addClass('is-first');
        }
        else {
            $('#editor-tabs-content').removeClass('is-first');
        }
    }
</script>